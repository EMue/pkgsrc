$NetBSD: patch-ar,v 1.1 2001/03/23 15:57:46 agc Exp $

Patch from Wofgang Solfrank:

The changes to unproven-pthreads fix a problem with fstat not using
the pthreads filedescriptors, but the native ones (the code for this
was already there (slightly buggy), but it wasn't used for some
unknown reason).  In addition, the handling of select is improved, as
the original code may wake up not all threads waiting for some event.

--- pthreads/fd_kern.c.orig	Mon Jul 10 19:23:28 2000
+++ pthreads/fd_kern.c	Fri Mar 23 15:43:59 2001
@@ -173,23 +173,26 @@
 				     ; i++) {
 				int count_dec = 0; 
 
-				if ((FD_ISSET(i, &pthread->data.select_data->exceptfds) && 
-				  ! FD_ISSET(i, &fd_set_except))) {
-					FD_CLR(i, &pthread->data.select_data->exceptfds);
-				} else {
-					count_dec++;
-				}
-				if ((FD_ISSET(i, &pthread->data.select_data->writefds) && 
-				     ! FD_ISSET(i, &fd_set_write))) {
-					FD_CLR(i, &pthread->data.select_data->writefds);
-				} else {
-					count_dec++;
-				}
-				if ((FD_ISSET(i, &pthread->data.select_data->readfds) && 
-				     ! FD_ISSET(i, &fd_set_read))) {
-					FD_CLR(i, &pthread->data.select_data->readfds);
-				} else {
-					count_dec++;
+				if (FD_ISSET(i, &pthread->data.select_data->exceptfds)) {
+					if (!FD_ISSET(i, &fd_set_except)) {
+						FD_CLR(i, &pthread->data.select_data->exceptfds);
+					} else {
+						count_dec++;
+					}
+				}
+				if (FD_ISSET(i, &pthread->data.select_data->writefds)) {
+					if (!FD_ISSET(i, &fd_set_write)) {
+						FD_CLR(i, &pthread->data.select_data->writefds);
+					} else {
+						count_dec++;
+					}
+				}
+				if (FD_ISSET(i, &pthread->data.select_data->readfds)) {
+					if (!FD_ISSET(i, &fd_set_read)) {
+						FD_CLR(i, &pthread->data.select_data->readfds);
+					} else {
+						count_dec++;
+					}
 				}
 				if (count_dec) {
 					found_one++;
@@ -312,23 +315,26 @@
 			for (i = 0; i < pthread->data.select_data->nfds; i++) {
 				int count_dec = 0; 
 
-				if ((FD_ISSET(i, &pthread->data.select_data->exceptfds) && 
-				  ! FD_ISSET(i, &fd_set_except))) {
-					FD_CLR(i, &pthread->data.select_data->exceptfds);
-				} else {
-					count_dec++;
-				}
-				if ((FD_ISSET(i, &pthread->data.select_data->writefds) && 
-				  ! FD_ISSET(i, &fd_set_write))) {
-					FD_CLR(i, &pthread->data.select_data->writefds);
-				} else {
-					count_dec++;
-				}
-				if ((FD_ISSET(i, &pthread->data.select_data->readfds) && 
-				  ! FD_ISSET(i, &fd_set_read))) {
-					FD_CLR(i, &pthread->data.select_data->readfds);
-				} else {
-					count_dec++;
+				if (FD_ISSET(i, &pthread->data.select_data->exceptfds)) {
+					if (!FD_ISSET(i, &fd_set_except)) {
+						FD_CLR(i, &pthread->data.select_data->exceptfds);
+					} else {
+						count_dec++;
+					}
+				}
+				if (FD_ISSET(i, &pthread->data.select_data->writefds)) {
+					if (!FD_ISSET(i, &fd_set_write)) {
+						FD_CLR(i, &pthread->data.select_data->writefds);
+					} else {
+						count_dec++;
+					}
+				}
+				if (FD_ISSET(i, &pthread->data.select_data->readfds)) {
+					if (!FD_ISSET(i, &fd_set_read)) {
+						FD_CLR(i, &pthread->data.select_data->readfds);
+					} else {
+						count_dec++;
+					}
 				}
 				if (count_dec) {
 					found_one++;
