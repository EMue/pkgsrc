$NetBSD: patch-aa,v 1.5 1999/07/13 00:56:13 jlam Exp $

--- display.c.orig	Thu Dec 17 15:36:30 1998
+++ display.c	Tue Jul  6 05:21:00 1999
@@ -652,7 +652,7 @@
 	      _rl_last_c_pos <= last_invisible && local_prompt)
 	    {
 	      if (term_cr)
-		tputs (term_cr, 1, _rl_output_character_function);
+		tputs (term_cr, 1, (void *)_rl_output_character_function);
 	      _rl_output_some_chars (local_prompt, nleft);
 	      _rl_last_c_pos = nleft;
 	    }
@@ -899,7 +899,7 @@
       term_cr && lendiff > visible_length && _rl_last_c_pos > 0 &&
       od > lendiff && _rl_last_c_pos < last_invisible)
     {
-      tputs (term_cr, 1, _rl_output_character_function);
+      tputs (term_cr, 1, (void *)_rl_output_character_function);
       _rl_output_some_chars (local_prompt, lendiff);
       _rl_last_c_pos = lendiff;
     }
@@ -1069,7 +1069,7 @@
 #if defined (__MSDOS__)
       putc ('\r', rl_outstream);
 #else
-      tputs (term_cr, 1, _rl_output_character_function);
+      tputs (term_cr, 1, (void *)_rl_output_character_function);
 #endif /* !__MSDOS__ */
       _rl_last_c_pos = 0;
     }
@@ -1090,7 +1090,7 @@
 
       if (term_forward_char)
 	for (i = _rl_last_c_pos; i < new; i++)
-	  tputs (term_forward_char, 1, _rl_output_character_function);
+	  tputs (term_forward_char, 1, (void *)_rl_output_character_function);
       else
 	for (i = _rl_last_c_pos; i < new; i++)
 	  putc (data[i], rl_outstream);
@@ -1127,14 +1127,14 @@
     {
       for (i = 0; i < delta; i++)
 	putc ('\n', rl_outstream);
-      tputs (term_cr, 1, _rl_output_character_function);
+      tputs (term_cr, 1, (void *)_rl_output_character_function);
       _rl_last_c_pos = 0;
     }
   else
     {			/* delta < 0 */
       if (term_up && *term_up)
 	for (i = 0; i < -delta; i++)
-	  tputs (term_up, 1, _rl_output_character_function);
+	  tputs (term_up, 1, (void *)_rl_output_character_function);
     }
 #endif /* !__GO32__ */
   _rl_last_v_pos = to;		/* Now TO is here */
@@ -1346,7 +1346,7 @@
 {
 #if !defined (__GO32__)
   if (term_clreol)
-    tputs (term_clreol, 1, _rl_output_character_function);
+    tputs (term_clreol, 1, (void *)_rl_output_character_function);
   else if (count)
 #endif /* !__GO32__ */
     space_to_eol (count);
@@ -1371,7 +1371,7 @@
 {
 #if !defined (__GO32__)
   if (term_clrpag)
-    tputs (term_clrpag, 1, _rl_output_character_function);
+    tputs (term_clrpag, 1, (void *)_rl_output_character_function);
   else
 #endif /* !__GO32__ */
     crlf ();
@@ -1402,7 +1402,7 @@
     {
       char *buffer;
       buffer = tgoto (term_IC, 0, count);
-      tputs (buffer, 1, _rl_output_character_function);
+      tputs (buffer, 1, (void *)_rl_output_character_function);
       _rl_output_some_chars (string, count);
     }
   else
@@ -1411,14 +1411,14 @@
 
       /* If we have to turn on insert-mode, then do so. */
       if (term_im && *term_im)
-	tputs (term_im, 1, _rl_output_character_function);
+	tputs (term_im, 1, (void *)_rl_output_character_function);
 
       /* If there is a special command for inserting characters, then
 	 use that first to open up the space. */
       if (term_ic && *term_ic)
 	{
 	  for (i = count; i--; )
-	    tputs (term_ic, 1, _rl_output_character_function);
+	    tputs (term_ic, 1, (void *)_rl_output_character_function);
 	}
 
       /* Print the text. */
@@ -1427,7 +1427,7 @@
       /* If there is a string to turn off insert mode, we had best use
 	 it now. */
       if (term_ei && *term_ei)
-	tputs (term_ei, 1, _rl_output_character_function);
+	tputs (term_ei, 1, (void *)_rl_output_character_function);
     }
 #endif /* !__GO32__ */
 }
@@ -1456,13 +1456,13 @@
     {
       char *buffer;
       buffer = tgoto (term_DC, count, count);
-      tputs (buffer, count, _rl_output_character_function);
+      tputs (buffer, count, (void *)_rl_output_character_function);
     }
   else
     {
       if (term_dc && *term_dc)
 	while (count--)
-	  tputs (term_dc, 1, _rl_output_character_function);
+	  tputs (term_dc, 1, (void *)_rl_output_character_function);
     }
 #endif /* !__GO32__ */
 }
@@ -1503,7 +1503,7 @@
 {
   if (term_cr)
     {
-      tputs (term_cr, 1, _rl_output_character_function);
+      tputs (term_cr, 1, (void *)_rl_output_character_function);
       _rl_last_c_pos = 0;
     }
 }
@@ -1518,14 +1518,14 @@
      the right thing happens if we have wrapped to a new screen line. */
   if (term_cr)
     {
-      tputs (term_cr, 1, _rl_output_character_function);
+      tputs (term_cr, 1, (void *)_rl_output_character_function);
       _rl_last_c_pos = 0;
       if (term_clreol)
-	tputs (term_clreol, 1, _rl_output_character_function);
+	tputs (term_clreol, 1, (void *)_rl_output_character_function);
       else
 	{
 	  space_to_eol (screenwidth);
-	  tputs (term_cr, 1, _rl_output_character_function);
+	  tputs (term_cr, 1, (void *)_rl_output_character_function);
 	}
       if (_rl_last_v_pos > 0)
 	_rl_move_vert (0);
