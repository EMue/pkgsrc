--- config.h.in.orig	Fri Jan 30 19:53:24 1998
+++ config.h.in	Thu Apr 23 06:25:01 1998
@@ -31,8 +31,8 @@
 /* Define to 1 if NLS is requested.  */
 #undef ENABLE_NLS
 
-/* Define if you have the fabsl function.  */
-#undef HAVE_FABSL
+/* Define if you have the sqrtl function.  */
+#undef HAVE_SQRTL
 
 /* Define if you have the socket function.  */
 #undef HAVE_SOCKET
--- configure.in.orig	Sat Jan 24 19:51:01 1998
+++ configure.in	Thu Apr 23 06:24:18 1998
@@ -56,7 +56,7 @@
 AC_C_LONG_DOUBLE  
 
 dnl Checks for library functions. MISCOBJS is for kdecore
-AC_CHECK_FUNCS(socket fabsl strdup) 
+AC_CHECK_FUNCS(socket sqrtl strdup) 
 AC_CHECK_KSIZE_T
 AC_CHECK_SETENV
 
--- configure.orig	Thu Apr 23 06:14:22 1998
+++ configure	Thu Apr 23 06:24:15 1998
@@ -3501,7 +3501,7 @@
 fi
   
 
-for ac_func in socket fabsl strdup
+for ac_func in socket sqrtl strdup
 do
 echo $ac_n "checking for $ac_func""... $ac_c" 1>&6
 echo "configure:3508: checking for $ac_func" >&5
--- kcalc/configdlg.cpp.orig	Fri Dec 12 19:14:04 1997
+++ kcalc/configdlg.cpp	Thu Apr 23 06:26:37 1998
@@ -86,7 +86,7 @@
   label5->setText("Precision:");
 
   int maxprec;
-#ifdef HAVE_FABSL 
+#ifdef HAVE_SQRTL 
   maxprec = 16 ;
 #else 
   maxprec = 12 ;
@@ -109,7 +109,7 @@
     cb->setChecked(true);
 
   int fixprec;
-#ifdef HAVE_FABSL 
+#ifdef HAVE_SQRTL 
   fixprec = 14 ;
 #else 
   fixprec = 10 ;
--- kcalc/kcalc.cpp.orig	Fri Dec 12 19:14:07 1997
+++ kcalc/kcalc.cpp	Thu Apr 23 06:26:40 1998
@@ -1528,7 +1528,7 @@
     "\n\n";
 
    labelstring +=
-#ifdef HAVE_FABSL 
+#ifdef HAVE_SQRTL 
 		 "Base type: long double\n";
 #else 
 		 "Base type: double\n";
@@ -1635,7 +1635,7 @@
 
   config->setGroup("Precision");
 
-#ifdef HAVE_FABSL  
+#ifdef HAVE_SQRTL  
   kcalcdefaults.precision =  config->readNumEntry("precision",(int)14);
 #else
   kcalcdefaults.precision =  config->readNumEntry("precision",(int)10);
--- kcalc/kcalc_core.cpp.orig	Fri Dec 12 19:14:10 1997
+++ kcalc/kcalc_core.cpp	Thu Apr 23 06:26:45 1998
@@ -1446,7 +1446,7 @@
 		    
 		    str_size = sprintf(display_str, 
 
-#ifdef HAVE_FABSL
+#ifdef HAVE_SQRTL
 				     "%.*Lg", // was *Lg
 				  
 				     kcalcdefaults.precision  +1, 
@@ -1461,7 +1461,7 @@
 
 		  str_size = sprintf(display_str, 
 
-#ifdef HAVE_FABSL
+#ifdef HAVE_SQRTL
 				     "%.*Lf", // was *Lg
 				  
 				     kcalcdefaults.fixedprecision  , 
@@ -1478,7 +1478,7 @@
 		  if ( input_count > 0 && !strpbrk(display_str,"e") &&
 					   last_input == DIGIT   ) {
 
-#ifdef HAVE_FABSL
+#ifdef HAVE_SQRTL
 		    str_size = sprintf(display_str, 
 					   "%.*Lf",
 			    (kcalcdefaults.precision +1 > input_count)? 
--- kcalc/kcalctype.h.orig	Sat Jan 10 19:59:04 1998
+++ kcalc/kcalctype.h	Thu Apr 23 06:26:50 1998
@@ -34,10 +34,10 @@
 // I guess it's time to switch to LINUX guys .....
 
 
-#ifdef HAVE_FABSL 
+#ifdef HAVE_SQRTL 
 
 /* should be detected by autoconf and defined in config.h
-   Be carefull when modifying these lines. HAVE_FABSL
+   Be carefull when modifying these lines. HAVE_SQRTL
    is used all over kcalc's sources to determine whether 
    long double of double is the fundamental data type for kcalc*/
 
@@ -49,7 +49,7 @@
 #endif
 
 
-#ifdef HAVE_FABSL
+#ifdef HAVE_SQRTL
 #define FABS(X)   	fabsl(X)
 #define MODF(X,Y)       modfl(X,Y)
 #define FMOD(X,Y)   	fmodl(X,Y)
