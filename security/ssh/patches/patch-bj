$NetBSD: patch-bj,v 1.2 2000/03/20 02:25:56 itojun Exp $

--- ssh.h-	Wed May 12 20:19:28 1999
+++ ssh.h	Mon Mar 20 09:47:32 2000
@@ -176,6 +176,16 @@
 #include "randoms.h"
 #include "cipher.h"
 
+#ifdef HESIOD
+#include <hesiod.h>
+
+#define getpwnam(a) hes_getpwnam(a)
+#define getpwuid(a) hes_getpwuid(a)
+
+extern struct passwd *hes_getpwnam(const char *name);
+extern struct passwd *hes_getpwuid(uid_t uid);
+#endif /* HESIOD */
+
 /* The default cipher used if IDEA is not supported by the remote host. 
    It is recommended that this be one of the mandatory ciphers (DES, 3DES),
    though that is not required. */
@@ -307,12 +317,13 @@
    protocol.)  */
 #define SSH_SESSION_KEY_LENGTH          32
 
-#ifdef KERBEROS
 #ifdef KRB5
 #include <krb5.h>
-#define KRB_SERVICE_NAME                "host"
+#define KRB5_SERVICE_NAME                "host"
 #endif /* KRB5 */
-#endif /* KERBEROS */
+#ifdef KRB4
+#define KRB4_SERVICE_NAME		"rcmd"
+#endif /* KRB4 */
 
 /* Authentication methods.  New types can be added, but old types should not
    be removed for compatibility.  The maximum allowed value is 31. */
@@ -336,6 +347,10 @@
 
 /* If you add new methods add them after this using random number between 16-31
    so if someone else adds also new methods you dont use same number. */
+#ifdef AFS
+#define SSH_PASS_AFS_TOKEN	21
+#endif /* AFS */
+
 
 /* Protocol flags.  These are bit masks. */
 #define SSH_PROTOFLAG_SCREEN_NUMBER     1 /* X11 forwarding includes screen */
@@ -410,7 +425,9 @@
 /* If ou add new messages add them starting from something after 64, better to
    use some random number between 64-127 so if someone else adds something else
    you dont use same numbers */
-
+#ifdef AFS
+#define SSH_CMSG_HAVE_AFS_TOKEN			65
+#endif /* AFS */
 
 /* define this and debug() will print local hostname */
 #define LOCAL_HOSTNAME_IN_DEBUG 1
@@ -479,12 +496,12 @@
 
 /* Tries to authenticate the user using password.  Returns true if
    authentication succeeds. */
-#if defined(KERBEROS) && defined(KRB5)
+#ifdef KRB5
 int auth_password(const char *server_user, const char *password,
                   krb5_principal client);
-#else /* defined(KERBEROS) && defined(KRB5) */
+#else /* KRB5 */
 int auth_password(const char *server_user, const char *password);
-#endif /* defined(KERBEROS) && defined(KRB5) */
+#endif /* KRB5 */
 
 /* Performs the RSA authentication dialog with the client.  This returns
    0 if the client could not be authenticated, and 1 if authentication was
