$NetBSD: patch-aa,v 1.3 2000/10/07 19:24:14 kim Exp $

It seems autoconf makes all switches "enable" even if the check is for
a "disable" switch, which confuses the logic in configure.in and thus
we disable the second test with the problematic default.

Don't completely override CPPFLAGS so we get -I${LOCALBASE}/include there.

Don't get anything from /usr/local ever!

There is no support for PGP 2.6x in the source anymore.

--- configure.in.orig	Thu Aug 10 22:53:55 2000
+++ configure.in	Sat Oct  7 04:02:30 2000
@@ -29,9 +29,9 @@
 [  --disable-thread        disable thread always],
 [disable_thread=yes],)
 
-AC_ARG_ENABLE(thread,
-[  --enable-thread         enable thread (on non-solaris platform)],
-[disable_thread=no],)
+dnl AC_ARG_ENABLE(thread,
+dnl [  --enable-thread         enable thread (on non-solaris platform)],
+dnl [disable_thread=no],)
 
 AC_ARG_ENABLE(mrouting,
 [  --disable-mrouting      disable multicast routing always],
@@ -76,7 +76,8 @@
 
 EXTRA_INCLUDE_DIRS=""
 EXTRA_LIBS=""
-CPPFLAGS="-DFUNCPROTO -I../../include"
+#CPPFLAGS="-DFUNCPROTO -I../../include"
+CPPFLAGS="-I../../include ${CPPFLAGS}"
 dnl defining FUNCPROTO ensures that struct library uses portotype
 dnl we don't expect non-ANSI (K&R) C compilers to be used
 dnl Some compiles may define __STDC__ by itself which makes it enable, 
@@ -311,12 +312,12 @@
 dnl AC_CHECK_LIB(resolv, inet_pton, [LIBS="$LIBS -lresolv"])
 
 
-if test -d /usr/local/include; then
-    CPPFLAGS="$CPPFLAGS -I/usr/local/include"
-fi
-if test -d /usr/local/lib; then
-    LDFLAGS="$LDFLAGS -L/usr/local/lib"
-fi
+dnl if test -d /usr/local/include; then
+dnl     CPPFLAGS="$CPPFLAGS -I/usr/local/include"
+dnl fi
+dnl if test -d /usr/local/lib; then
+dnl     LDFLAGS="$LDFLAGS -L/usr/local/lib"
+dnl fi
 
 dnl find flex and bixon
 AC_PATH_PROG(FLEX_PATH,flex,no)
@@ -426,21 +427,16 @@
 fi
 AC_PATH_PROG(PGPK_PATH,pgpk,no)
 if test $PGPK_PATH = no; then
-	PGPK_PATH=""
+    PGPK_PATH=""
 fi
 AC_PATH_PROG(PGPS_PATH,pgps,no)
 if test $PGPS_PATH = no; then
-	PGPS_PATH=""
+    PGPS_PATH=""
 fi
 AC_PATH_PROG(PGPV_PATH,pgpv,no)
 if test $PGPV_PATH = no; then
-    AC_PATH_PROG(PGPV_PATH,pgp,no)
-    if test $PGPV_PATH = no; then
-        PGPV_PATH=""
-        AC_DEFINE(PGP,0)
-    else
-        AC_DEFINE(PGP,26)
-    fi
+    PGPV_PATH=""
+    AC_DEFINE(PGP,0)
 else
     AC_DEFINE(PGP, 5)        
 fi
