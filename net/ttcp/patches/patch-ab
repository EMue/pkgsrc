$NetBSD: patch-ab,v 1.3 1998/08/07 11:11:02 agc Exp $

*** ttcp.c.orig	Thu Feb 27 13:30:23 1997
--- ttcp.c	Tue Jan 27 13:51:55 1998
***************
*** 55,60 ****
--- 55,61 ----
  #include <arpa/inet.h>
  #include <netdb.h>
  #include <sys/time.h>		/* struct timeval */
+ #include <stdlib.h>
  
  #if defined(SYSV)
  #include <sys/times.h>
***************
*** 263,269 ****
  	if ( (buf = (char *)malloc(buflen+bufalign)) == (char *)NULL)
  		err("malloc");
  	if (bufalign != 0)
! 		buf +=(bufalign - ((int)buf % bufalign) + bufoffset) % bufalign;
  
  	if (trans) {
  	    fprintf(stdout,
--- 264,270 ----
  	if ( (buf = (char *)malloc(buflen+bufalign)) == (char *)NULL)
  		err("malloc");
  	if (bufalign != 0)
! 		buf +=(bufalign - ((u_long)buf % bufalign) + bufoffset) % bufalign;
  
  	if (trans) {
  	    fprintf(stdout,
***************
*** 285,291 ****
  		err("socket");
  	mes("socket");
  
! 	if (bind(fd, &sinme, sizeof(sinme)) < 0)
  		err("bind");
  
  #if defined(SO_SNDBUF) || defined(SO_RCVBUF)
--- 286,292 ----
  		err("socket");
  	mes("socket");
  
! 	if (bind(fd, (struct sockaddr *)&sinme, sizeof(sinme)) < 0)
  		err("bind");
  
  #if defined(SO_SNDBUF) || defined(SO_RCVBUF)
***************
*** 326,332 ****
  			mes("nodelay");
  		}
  #endif
! 		if(connect(fd, &sinhim, sizeof(sinhim) ) < 0)
  			err("connect");
  		mes("connect");
  	    } else {
--- 327,333 ----
  			mes("nodelay");
  		}
  #endif
! 		if(connect(fd, (struct sockaddr *)&sinhim, sizeof(sinhim) ) < 0)
  			err("connect");
  		mes("connect");
  	    } else {
***************
*** 348,358 ****
  		}
  		fromlen = sizeof(frominet);
  		domain = AF_INET;
! 		if((fd=accept(fd, &frominet, &fromlen) ) < 0)
  			err("accept");
  		{ struct sockaddr_in peer;
  		  int peerlen = sizeof(peer);
! 		  if (getpeername(fd, (struct sockaddr_in *) &peer, 
  				&peerlen) < 0) {
  			err("getpeername");
  		  }
--- 349,359 ----
  		}
  		fromlen = sizeof(frominet);
  		domain = AF_INET;
! 		if((fd=accept(fd, (struct sockaddr *)&frominet, &fromlen) ) < 0)
  			err("accept");
  		{ struct sockaddr_in peer;
  		  int peerlen = sizeof(peer);
! 		  if (getpeername(fd, (struct sockaddr *) &peer, 
  				&peerlen) < 0) {
  			err("getpeername");
  		  }
***************
*** 752,758 ****
  	int len = sizeof(from);
  	register int cnt;
  	if( udp )  {
! 		cnt = recvfrom( fd, buf, count, 0, &from, &len );
  		numCalls++;
  	} else {
  		if( b_flag )
--- 753,759 ----
  	int len = sizeof(from);
  	register int cnt;
  	if( udp )  {
! 		cnt = recvfrom( fd, buf, count, 0, (struct sockaddr *)&from, &len );
  		numCalls++;
  	} else {
  		if( b_flag )
***************
*** 782,788 ****
  	register int cnt;
  	if( udp )  {
  again:
! 		cnt = sendto( fd, buf, count, 0, &sinhim, sizeof(sinhim) );
  		numCalls++;
  		if( cnt<0 && errno == ENOBUFS )  {
  			delay(18000);
--- 783,789 ----
  	register int cnt;
  	if( udp )  {
  again:
! 		cnt = sendto( fd, buf, count, 0, (struct sockaddr *)&sinhim, sizeof(sinhim) );
  		numCalls++;
  		if( cnt<0 && errno == ENOBUFS )  {
  			delay(18000);
