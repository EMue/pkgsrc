$NetBSD: patch-aa,v 1.4 2000/09/03 14:45:22 wiz Exp $
--- configure.orig	Thu Jan  9 09:22:00 1997
+++ configure	Wed Aug 30 13:07:40 2000
@@ -2202,14 +2202,14 @@
 cat > conftest.$ac_ext <<EOF
 #line 2204 "configure"
 #include "confdefs.h"
+#include <tk.h>
 /* Override any gcc2 internal prototype to avoid an error.  */
 /* We use char because int might match the return type of a gcc2
     builtin and then its argument prototype would still apply.  */
-char Tk_Main();
 
 int main() { return 0; }
 int t() {
-Tk_Main()
+Tk_MainEx(0, (char **)0, (char *)0)
 ; return 0; }
 EOF
 if { (eval echo configure:2216: \"$ac_link\") 1>&5; (eval $ac_link) 2>&5; }; then
@@ -2245,11 +2245,11 @@
 /* Override any gcc2 internal prototype to avoid an error.  */
 /* We use char because int might match the return type of a gcc2
     builtin and then its argument prototype would still apply.  */
-char Tk_Main();
+char Tk_MainEx();
 
 int main() { return 0; }
 int t() {
-Tk_Main()
+Tk_MainEx(0, (char **)0, (char *)0)
 ; return 0; }
 EOF
 if { (eval echo configure:2256: \"$ac_link\") 1>&5; (eval $ac_link) 2>&5; }; then
@@ -2286,11 +2286,11 @@
 /* Override any gcc2 internal prototype to avoid an error.  */
 /* We use char because int might match the return type of a gcc2
     builtin and then its argument prototype would still apply.  */
-char Tk_Main();
+char Tk_MainEx();
 
 int main() { return 0; }
 int t() {
-Tk_Main()
+Tk_Main(0, (char **)0, (char *)0)
 ; return 0; }
 EOF
 if { (eval echo configure:2297: \"$ac_link\") 1>&5; (eval $ac_link) 2>&5; }; then
@@ -3148,7 +3148,7 @@
 
 fi
 
-for ac_hdr in fcntl.h unistd.h memory.h malloc.h errno.h direct.h
+for ac_hdr in fcntl.h unistd.h memory.h errno.h direct.h
 do
 ac_safe=`echo "$ac_hdr" | tr './\055' '___'`
 echo $ac_n "checking for $ac_hdr""... $ac_c" 1>&6
