Return-Path: <current-users-owner-agc=amdahl.com@NetBSD.ORG>
Received: by juno.ccc.amdahl.com (/\==/\ Smail #25.1)
        id <m0we6gi-0000SSC@juno.ccc.amdahl.com>; Tue, 17 Jun 97 15:25 PDT
Received: from vega.oes.amdahl.com by orpheus.amdahl.com with smtp
        (Smail3.1.29.1 #3) id m0we6gp-0004iwC; Tue, 17 Jun 97 15:25 PDT
Received: from minerva.amdahl.com by vega.oes.amdahl.com with SMTP
        (OES Smail-3.1.29.1) id m0we6gp-000B0rC; Tue, 17 Jun 97 15:25 PDT
Received: from orpheus.amdahl.com by minerva.amdahl.com with smtp
        (Smail3.1.29.1 #5) id m0we6gn-0002AWC; Tue, 17 Jun 97 15:25 PDT
Received: from mail.NetBSD.ORG by orpheus.amdahl.com with smtp
        (Smail3.1.29.1 #3) id m0we6gn-0004iwC; Tue, 17 Jun 97 15:25 PDT
Received: (qmail 1595 invoked by uid 605); 17 Jun 1997 22:25:30 -0000
Received: (qmail 1589 invoked from network); 17 Jun 1997 22:25:26 -0000
Received: from ramoth.nyc.deshaw.com (root@149.77.15.102)
  by homeworld.cygnus.com with SMTP; 17 Jun 1997 22:25:26 -0000
Received: (from christos@localhost)
 by ramoth.nyc.deshaw.com (8.8.5/8.7.Alpha.4/1.34.kim) id SAA00740
 for current-users@netbsd.org; Tue, 17 Jun 1997 18:24:22 -0400 (EDT)
Message-Id: <199706172224.SAA00740@ramoth.nyc.deshaw.com>
From: christos@deshaw.com (Christos Zoulas)
Date: Tue, 17 Jun 1997 18:24:22 -0400
Organization: D. E. Shaw & Co.
X-Address: Tower 45, 120 West 45th St., 39th Floor, New York, N.Y. 10036
X-Phone: (212) 478 0000
X-Fax: (212) 478 0101
X-Face:  %jL.CVv-*"-d?@xSu)#i[QzHK3,c?Qx,G.u#bZ;O'qSg"$LmB})v;&A"6r&;#2NRahSRwYl
  D9Y8"L97FX^O7oBy?'hA6-1AQA`L(c[yqZySfl/t&4;gHT1|X\ElkgxMV<G<Wl4Bw[Y^/8]X@>NUjM
  /A)InAN\hPuhymGG{1&&ay2c"[4z_*Gb?{gbnv5+?terjcRFl`(^3vO-^Mw%\Cfk`p{@!a3&/NR#*p
  <c]7@{DT)R_*g4#M@G98-f$hN#J<pnDfR:xx<ph,7HcR3TeE|G~&}*>fH0rostE1
X-Mailer: Mail User's Shell (7.2.6 beta(2)+dynamic 2/29/96)
To: current-users@netbsd.org
Subject: patch for the top patch
Sender: current-users-owner@NetBSD.ORG
Precedence: list
Delivered-To: current-users@NetBSD.ORG
 
 
I liked more the wait proc patch... This is to be applied after Luke's patch.
 
christos
 
[agc - I've modified the filename below so that it works in the packages
system]

*** machine/m_netbsd13.c.orig	Tue Jun 17 18:16:57 1997
--- machine/m_netbsd13.c	Tue Jun 17 18:12:02 1997
***************
*** 109,120 ****
   */
  
  static char header[] =
!   "  PID X        PRI NICE   SIZE   RES STATE   TIME   WCPU    CPU COMMAND";
  /* 0123456   -- field to fill in starts at header+6 */
  #define UNAME_START 6
  
  #define Proc_format \
! 	"%5d %-8.8s %3d %4d%7s %5s %-5s%7s %5.2f%% %5.2f%% %.14s"
  
  
  /* process state names for the "STATE" column of the display */
--- 109,120 ----
   */
  
  static char header[] =
!   "  PID X        PRI NICE  SIZE   RES STATE WAIT     TIME    CPU COMMAND";
  /* 0123456   -- field to fill in starts at header+6 */
  #define UNAME_START 6
  
  #define Proc_format \
! 	"%5d %-8.8s %3d %4d %5s %5s %-5s %-6.6s %6s %5.2f%% %.14s"
  
  
  /* process state names for the "STATE" column of the display */
***************
*** 474,479 ****
--- 474,480 ----
      long cputime;
      double pct;
      struct handle *hp;
+     char *p_wait, waddr[32];
  
      /* find and remember the next proc structure */
      hp = (struct handle *)handle;
***************
*** 506,513 ****
      /* calculate the base for cpu percentages */
      pct = pctdouble(PP(pp, p_pctcpu));
  
! #define Proc_format \
! 	"%5d %-8.8s %3d %4d%7s %5s %-5s%7s %5.2f%% %5.2f%% %.14s"
  
      /* format this entry */
      sprintf(fmt,
--- 507,522 ----
      /* calculate the base for cpu percentages */
      pct = pctdouble(PP(pp, p_pctcpu));
  
!     if (PP(pp, p_wchan))
!         if (PP(pp, p_wmesg))
! 	    p_wait = EP(pp, e_wmesg);
! 	else {
! 	    sprintf(waddr, "%x", 
! 		(unsigned long)(PP(pp, p_wchan)) & ~KERNBASE);
! 	    p_wait = waddr;
!         }
!     else
! 	p_wait = "-";
  
      /* format this entry */
      sprintf(fmt,
***************
*** 519,526 ****
  	    format_k(pagetok(PROCSIZE(pp))),
  	    format_k(pagetok(VP(pp, vm_rssize))),
  	    state_abbrev[(unsigned char) PP(pp, p_stat)],
  	    format_time(cputime),
- 	    10000.0 * weighted_cpu(pct, pp) / hz,
  	    10000.0 * pct / hz,
  	    printable(PP(pp, p_comm)));
  
--- 528,535 ----
  	    format_k(pagetok(PROCSIZE(pp))),
  	    format_k(pagetok(VP(pp, vm_rssize))),
  	    state_abbrev[(unsigned char) PP(pp, p_stat)],
+ 	    p_wait,
  	    format_time(cputime),
  	    10000.0 * pct / hz,
  	    printable(PP(pp, p_comm)));
  
