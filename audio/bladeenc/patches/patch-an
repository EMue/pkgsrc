$NetBSD: patch-an,v 1.2 1999/09/20 09:30:19 agc Exp $

--- samplein.c.orig	Fri Jul 23 22:50:33 1999
+++ samplein.c	Mon Sep 20 10:19:51 1999
@@ -52,11 +52,11 @@
 static int	initAIFF( SplIn * psInfo );
 static uint	readAIFFSamples( SplIn * psInfo, int nSamples, short * wpSamples );
 
-static int myFseek( FILE * fp, long offset );
+static int myFseek( FILE * fp, int offset );
 
 
-ulong INLINE intlLong( char iLong[4] );
-ulong INLINE mcLong( char mcLong[4] );
+uint INLINE intlLong( char iLong[4] );
+uint INLINE mcLong( char mcLong[4] );
 ushort INLINE intlShort( char iShort[2] );
 ushort INLINE mcShort( char mcShort[2] );
 
@@ -124,6 +124,10 @@
 	return	FALSE;
 }
 
+#if defined(__sun__) && defined(__svr4__)
+typedef unsigned char	u_int8_t;
+#endif
+
 
 /*____ readSamples() __________________________________________________________*/
 
@@ -185,8 +189,8 @@
 	if( psInfo->bits == 8 )
 	{
  		for( i = readSamples-1 ; i > 0 ; i-- )
-    	wpSamples[i] = ((short)((unsigned char *) wpSamples)[i]) << 8;
- 		wpSamples[i] = ((short)((unsigned char *) wpSamples)[i]) << 8;
+    	wpSamples[i] = ((short)((u_int8_t *) wpSamples)[i]) << 8;
+ 		wpSamples[i] = ((short)((u_int8_t *) wpSamples)[i]) << 8;
 	}
 
 	/* Convert unsigned to signed */
@@ -256,8 +260,8 @@
 { 
 	short		wFormatTag;						/* Format category */
   short		wChannels;						/* Number of channels */
-  long		dwSamplesPerSec;			/* Sampling rate */
-  long		dwAvgBytesPerSec;			/* For buffer estimation */
+  int		dwSamplesPerSec;			/* Sampling rate */
+  int		dwAvgBytesPerSec;			/* For buffer estimation */
   short		wBlockAlign;					/* Data block size */
 	short		bitsPerSample;				/* Actually a PCM-specific additional byte... */
 } sFmtChunk;
@@ -366,7 +370,7 @@
 	struct 
 	{ 
 		short           numChannels;
-    unsigned long   numSampleFrames;
+    unsigned int   numSampleFrames;
     short           sampleSize;
 /*    char						sampleRate[10]; */
 
@@ -509,19 +513,19 @@
 
 /*____ intlLong() _____________________________________________________________*/
 
-ulong INLINE intlLong( char iLong[4] )
+uint INLINE intlLong( char iLong[4] )
 {
-	return	((ulong)((uchar*)iLong)[0]) + (((ulong)((uchar*)iLong)[1]) << 8)
-		    + (((ulong)((uchar*)iLong)[2]) << 16) + (((ulong)((uchar*)iLong)[3]) << 24);
+	return	((uint)((uchar*)iLong)[0]) + (((uint)((uchar*)iLong)[1]) << 8)
+		    + (((uint)((uchar*)iLong)[2]) << 16) + (((uint)((uchar*)iLong)[3]) << 24);
 }
 
 
 /*____ mcLong() _______________________________________________________________*/
 
-ulong INLINE mcLong( char mcLong[4] )
+uint INLINE mcLong( char mcLong[4] )
 {
-	return	((ulong)((uchar*)mcLong)[3]) + (((ulong)((uchar*)mcLong)[2]) << 8 )
-		    + (((ulong)((uchar*)mcLong)[1]) << 16) + (((ulong)((uchar*)mcLong)[0]) << 24);
+	return	((uint)((uchar*)mcLong)[3]) + (((uint)((uchar*)mcLong)[2]) << 8 )
+		    + (((uint)((uchar*)mcLong)[1]) << 16) + (((uint)((uchar*)mcLong)[0]) << 24);
 }
 
 
@@ -544,7 +548,7 @@
 
 /* We can't use the real fseek() since you can't seek in a stream (stdin) */
 
-int myFseek( FILE * fp, long offset )
+int myFseek( FILE * fp, int offset )
 {
 	char	dummy[256];
 
