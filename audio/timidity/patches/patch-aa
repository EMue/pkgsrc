*** mix.c.orig	Mon May 20 17:09:46 1996
--- mix.c	Sun Nov 17 10:01:36 1996
***************
*** 23,29 ****
--- 23,33 ----
  
  #include <math.h>
  #include <stdio.h>
+ #if defined(__FreeBSD__) || defined(__NetBSD__)
+ #include <stdlib.h>
+ #else
  #include <malloc.h>
+ #endif
  
  #include "config.h"
  #include "common.h"
*** resample.c.orig	Mon May 20 17:09:47 1996
--- resample.c	Sun Nov 17 09:59:29 1996
***************
*** 22,28 ****
--- 22,32 ----
  
  #include <math.h>
  #include <stdio.h>
+ #if defined(__FreeBSD__) || defined(__NetBSD__)
+ #include <stdlib.h>
+ #else
  #include <malloc.h>
+ #endif
  
  #include "config.h"
  #include "common.h"
--- config.h.orig	Sat Jun  1 13:54:49 1996
+++ config.h	Mon Jan 26 13:52:44 1998
@@ -185,6 +185,11 @@
    fragments under the VoxWare (Linux & FreeBSD) audio driver */
 #define AUDIO_BUFFER_SIZE (1<<AUDIO_BUFFER_BITS)
 
+#if (defined(__unix__) || defined(unix)) && !defined(USG)
+#include <sys/param.h>
+#undef FSCALE
+#endif
+
 /* Byte order, defined in <machine/endian.h> for FreeBSD and DEC OSF/1 */
 #ifdef DEC
 #include <machine/endian.h>
@@ -217,6 +222,22 @@
 # endif
 #endif /* linux */
 
+#if (defined(BSD) && BSD >= 199306)
+#include <errno.h>
+#include <machine/endian.h>
+#if BYTE_ORDER == LITTLE_ENDIAN
+#undef BIG_ENDIAN
+#undef PDP_ENDIAN
+#elif BYTE_ORDER == BIG_ENDIAN
+#undef LITTLE_ENDIAN
+#undef PDP_ENDIAN
+#else
+# error No valid byte sex defined
+#endif
+#define USE_LDEXP
+#define PI M_PI
+#endif
+
 /* Win32 on Intel machines */
 #ifdef __WIN32__
 #  define LITTLE_ENDIAN
@@ -254,13 +275,23 @@
 #ifdef LITTLE_ENDIAN
 #define LE_SHORT(x) x
 #define LE_LONG(x) x
+#ifdef __FreeBSD__
+#define BE_SHORT(x) __byte_swap_word(x)
+#define BE_LONG(x) __byte_swap_long(x)
+#else
 #define BE_SHORT(x) XCHG_SHORT(x)
 #define BE_LONG(x) XCHG_LONG(x)
+#endif
 #else
 #define BE_SHORT(x) x
 #define BE_LONG(x) x
+#ifdef __FreeBSD__
+#define LE_SHORT(x) __byte_swap_word(x)
+#define LE_LONG(x) __byte_swap_long(x)
+#else
 #define LE_SHORT(x) XCHG_SHORT(x)
 #define LE_LONG(x) XCHG_LONG(x)
+#endif
 #endif
 
 #define MAX_AMPLIFICATION 800
